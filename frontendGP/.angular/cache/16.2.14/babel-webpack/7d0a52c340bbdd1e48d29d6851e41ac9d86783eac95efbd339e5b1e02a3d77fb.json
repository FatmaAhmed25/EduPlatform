{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let SidebarComponent = class SidebarComponent {};\nSidebarComponent = __decorate([Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})], SidebarComponent);\nconst body = document.querySelector('body'),\n  sidebar = body.querySelector('nav'),\n  toggle = body.querySelector(\".toggle\"),\n  searchBtn = body.querySelector(\".search-box\"),\n  modeSwitch = body.querySelector(\".toggle-switch\"),\n  modeText = body.querySelector(\".mode-text\");\ntoggle.addEventListener(\"click\", () => {\n  sidebar.classList.toggle(\"close\");\n});\nsearchBtn.addEventListener(\"click\", () => {\n  sidebar.classList.remove(\"close\");\n});\nmodeSwitch.addEventListener(\"click\", () => {\n  body.classList.toggle(\"dark\");\n  if (body.classList.contains(\"dark\")) {\n    modeText.innerText = \"Light mode\";\n  } else {\n    modeText.innerText = \"Dark mode\";\n  }\n});","map":{"version":3,"names":["Component","SidebarComponent","__decorate","selector","templateUrl","styleUrls","body","document","querySelector","sidebar","toggle","searchBtn","modeSwitch","modeText","addEventListener","classList","remove","contains","innerText"],"sources":["D:\\frontend-gp\\frontendGP\\src\\app\\sidebar\\sidebar.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent {\n\n}\nconst body = document.querySelector('body'),\n      sidebar = body.querySelector('nav'),\n      toggle = body.querySelector(\".toggle\"),\n      searchBtn = body.querySelector(\".search-box\"),\n      modeSwitch = body.querySelector(\".toggle-switch\"),\n      modeText = body.querySelector(\".mode-text\");\n\n\ntoggle.addEventListener(\"click\" , () =>{\n    sidebar.classList.toggle(\"close\");\n})\n\nsearchBtn.addEventListener(\"click\" , () =>{\n    sidebar.classList.remove(\"close\");\n})\n\nmodeSwitch.addEventListener(\"click\" , () =>{\n    body.classList.toggle(\"dark\");\n    \n    if(body.classList.contains(\"dark\")){\n        modeText.innerText = \"Light mode\";\n    }else{\n        modeText.innerText = \"Dark mode\";\n        \n    }\n});"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB,GAE5B;AAFYA,gBAAgB,GAAAC,UAAA,EAL5BF,SAAS,CAAC;EACTG,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWJ,gBAAgB,CAE5B;AACD,MAAMK,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;EACrCC,OAAO,GAAGH,IAAI,CAACE,aAAa,CAAC,KAAK,CAAC;EACnCE,MAAM,GAAGJ,IAAI,CAACE,aAAa,CAAC,SAAS,CAAC;EACtCG,SAAS,GAAGL,IAAI,CAACE,aAAa,CAAC,aAAa,CAAC;EAC7CI,UAAU,GAAGN,IAAI,CAACE,aAAa,CAAC,gBAAgB,CAAC;EACjDK,QAAQ,GAAGP,IAAI,CAACE,aAAa,CAAC,YAAY,CAAC;AAGjDE,MAAM,CAACI,gBAAgB,CAAC,OAAO,EAAG,MAAK;EACnCL,OAAO,CAACM,SAAS,CAACL,MAAM,CAAC,OAAO,CAAC;AACrC,CAAC,CAAC;AAEFC,SAAS,CAACG,gBAAgB,CAAC,OAAO,EAAG,MAAK;EACtCL,OAAO,CAACM,SAAS,CAACC,MAAM,CAAC,OAAO,CAAC;AACrC,CAAC,CAAC;AAEFJ,UAAU,CAACE,gBAAgB,CAAC,OAAO,EAAG,MAAK;EACvCR,IAAI,CAACS,SAAS,CAACL,MAAM,CAAC,MAAM,CAAC;EAE7B,IAAGJ,IAAI,CAACS,SAAS,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAC;IAC/BJ,QAAQ,CAACK,SAAS,GAAG,YAAY;GACpC,MAAI;IACDL,QAAQ,CAACK,SAAS,GAAG,WAAW;;AAGxC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}